source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(list=ls(all=TRUE))
library(shiny)
library(leaflet)
library(RColorBrewer)
library(ggmap)
library(googlesheets)
Data <- gs_title("New_methods")
Project <- gs_read(ss = Data, ws = "Sheet_1", skip = 0)
colnames(Project)[2]  <- "title"
colnames(Project)[3]  <- "pi_name"
colnames(Project)[4]  <- "pi_institute"
colnames(Project)[5]  <- "pi_city"
colnames(Project)[6]  <- "coi_names"
colnames(Project)[7]  <- "coi_institutes"
colnames(Project)[8]  <- "level"
colnames(Project)[9]  <- "intro"
colnames(Project)[10] <- "methods"
colnames(Project)[11] <- "publications"
colnames(Project)[12] <- "website"
Project$coords <- geocode(as.character(Project$pi_city), source = "dsk")
Project$lat  <- as.numeric(Project$coords$lat)
Project$long <- as.numeric(Project$coords$lon)
Project$ids  <- seq.int(nrow(Project))
shinyApp(
ui = fluidPage(
fluidRow(
leaflet(Project) %>%
setView(lng = -0.1278328, lat = 51.50726, zoom = 2) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addCircleMarkers(clusterOptions = markerClusterOptions(),
fillOpacity = 0.9,
popup = ~paste0("<b>Project title: </b> ", title,
"<br> <b>PI name: </b>", pi_name,
"<br> <b>PI institution </b>", pi_institute,
"<br> <b>Other researchers: </b>", coi_names,
"<br> <b>Research level: </b>", level),
radius = 10)
),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(lat = Project$lat,
lng = Project$long,
radius = 10,
layerId = Project$ids)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
shinyApp(
ui = fluidPage(
fluidRow(
leaflet(Project) %>%
setView(lng = -0.1278328, lat = 51.50726, zoom = 2) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas)
),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
addCircleMarkers(clusterOptions = markerClusterOptions(),
fillOpacity = 0.9,
popup = ~paste0("<b>Project title: </b> ", title,
"<br> <b>PI name: </b>", pi_name,
"<br> <b>PI institution </b>", pi_institute,
"<br> <b>Other researchers: </b>", coi_names,
"<br> <b>Research level: </b>", level),
radius = 10)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
shinyApp(
ui = fluidPage(
fluidRow(
leaflet(Project) %>%
setView(lng = -0.1278328, lat = 51.50726, zoom = 2) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas)
),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'Project')
session$onFlushed(once=T, function(){
addCircleMarkers(clusterOptions = markerClusterOptions(),
fillOpacity = 0.9,
popup = ~paste0("<b>Project title: </b> ", title,
"<br> <b>PI name: </b>", pi_name,
"<br> <b>PI institution </b>", pi_institute,
"<br> <b>Other researchers: </b>", coi_names,
"<br> <b>Research level: </b>", level),
radius = 10)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
shinyApp(
ui = fluidPage(
fluidRow(
leaflet(Project) %>%
setView(lng = -0.1278328, lat = 51.50726, zoom = 2) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas)
),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, Project)
session$onFlushed(once=T, function(){
addCircleMarkers(clusterOptions = markerClusterOptions(),
fillOpacity = 0.9,
popup = ~paste0("<b>Project title: </b> ", title,
"<br> <b>PI name: </b>", pi_name,
"<br> <b>PI institution </b>", pi_institute,
"<br> <b>Other researchers: </b>", coi_names,
"<br> <b>Research level: </b>", level),
radius = 10)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
shinyApp(
ui = fluidPage(
fluidRow(
leaflet(Project) %>%
setView(lng = -0.1278328, lat = 51.50726, zoom = 2) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas)
),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
session$onFlushed(once=T, function(){
addCircleMarkers(clusterOptions = markerClusterOptions(),
fillOpacity = 0.9,
popup = ~paste0("<b>Project title: </b> ", title,
"<br> <b>PI name: </b>", pi_name,
"<br> <b>PI institution </b>", pi_institute,
"<br> <b>Other researchers: </b>", coi_names,
"<br> <b>Research level: </b>", level),
radius = 10)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
shinyApp(
ui = fluidPage(
fluidRow(
leaflet(Project) %>%
setView(lng = -0.1278328, lat = 51.50726, zoom = 2) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas)
),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
session$onFlushed(once=T, function(){
map = createLeafletMap(session, 'map')
addCircleMarkers(clusterOptions = markerClusterOptions(),
fillOpacity = 0.9,
popup = ~paste0("<b>Project title: </b> ", title,
"<br> <b>PI name: </b>", pi_name,
"<br> <b>PI institution </b>", pi_institute,
"<br> <b>Other researchers: </b>", coi_names,
"<br> <b>Research level: </b>", level),
radius = 10)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
shinyApp(
ui = fluidPage(
fluidRow(
leaflet(Project) %>%
setView(lng = -0.1278328, lat = 51.50726, zoom = 2) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas)
),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
session$onFlushed(once=T, function(){
leaflet(Project) %>%
map = createLeafletMap(session, 'map') %>%
addCircleMarkers(clusterOptions = markerClusterOptions(),
fillOpacity = 0.9,
popup = ~paste0("<b>Project title: </b> ", title,
"<br> <b>PI name: </b>", pi_name,
"<br> <b>PI institution </b>", pi_institute,
"<br> <b>Other researchers: </b>", coi_names,
"<br> <b>Research level: </b>", level),
radius = 10)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
library(shiny); runApp('C:/Users/David Buil Gil/Downloads/Map_US.R')
runApp('C:/Users/David Buil Gil/Downloads/Map_US.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(shiny)
library(dplyr)
library(leaflet)
library(RColorBrewer)
library(ggmap)
library(googlesheets)
Data <- gs_title("New_methods")
Project <- gs_read(ss=Data, ws = "Sheet_1", skip=0)
colnames(Project)[2] <- "title"
colnames(Project)[3] <- "pi_name"
colnames(Project)[4] <- "pi_institute"
colnames(Project)[5] <- "pi_city"
colnames(Project)[6] <- "coi_names"
colnames(Project)[7] <- "coi_institutes"
colnames(Project)[8] <- "level"
colnames(Project)[9] <- "intro"
colnames(Project)[10] <- "methods"
colnames(Project)[11] <- "publications"
colnames(Project)[12] <- "website"
Project$coords <- geocode(as.character(Project$pi_city), source="dsk")
Project$lat <- as.numeric(Project$coords$lat)
Project$long <- as.numeric(Project$coords$lon)
ui <- bootstrapPage(
tags$style(type = "text/css", "html, body {width:100%;height:100%}"),
leafletOutput("map", width = "100%", height = "80%"),
#put textOutput() here with
uiOutput("selected_proj"),
absolutePanel(top = 10, right = 10)
)
server <- function(input, output, session) {
#create the text output with HTML
output$selected_proj <- renderUI({
HTML(paste0(
'<td valign="top" style = "padding-left:30px; padding-top:15px;">',
"Click on a project on the map for more information",
"</td>"
))
})
output$map <- renderLeaflet({
pal <- colorFactor(c("navy", "red", "orange", "purple"), domain = unique(Project$level))
leaflet(Project) %>%
setView(lng = -0.1278328, lat = 51.50726, zoom = 2) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addCircleMarkers(clusterOptions = markerClusterOptions(),
color = ~pal(level),
fillOpacity = 0.9,
popup = ~paste0("<b>Project title:</b> ", title,
"<br> <b> PI name: </b>", pi_name,
"<br> <b> PI institution </b>", pi_institute,
"<br> <b> Other researchers: </b>", coi_names,
"<br> <b> Research level: </b>", level),
radius = 10)
})
# sel_project <- reactive(input$map_marker_click, {
#   click <- input$map_marker_click
#   sel_project <- Project[which(Project$lat == click$lat & Project$long == click$lng),]
#   sel_project[is.na(sel_project)] <- ""
#
# })
#
observeEvent(input$map_marker_click, {
click <- input$map_marker_click
sel_project <- Project %>%
filter(lat == click$lat & long == click$lng)
output$selected_proj <- renderUI({
HTML(paste0(
'<td valign="top" style = "padding-left:30px; padding-top:15px;">',
"<b>Project title:</b> ", sel_project$title,
"<br> <b> PI institution </b>", sel_project$pi_institute,
"<br> <b> PI name: </b>", sel_project$pi_name,
"<br> <b> Other researchers: </b>", sel_project$coi_names,
"<br> <b> Other researchers institutes: </b>", sel_project$coi_institutes,
"<br> <b> Research level: </b>", sel_project$level,
"<br> <b> Introduction: </b>", sel_project$intro,
"<br> <b> Methodology: </b>", sel_project$methods,
"<br> <b> Reports and publications: </b>", sel_project$publications,
"<br> <b> Website: </b>", sel_project$website,
"</td>"
))
})
})
##Add text output "<b>Project title:</b> ", title,
#  "<br> <b> PI institution </b>", pi_institute,
#  "<br> <b> PI name: </b>", pi_name,
#  "<br> <b> Other researchers: </b>", coi_names,
#  "<br> <b> Other researchers institutes: </b>", coi_institutes,
#  "<br> <b> Research level: </b>", level,
#  "<br> <b> Introduction: </b>", intro,
#  "<br> <b> Methodology: </b>", methods,
#  "<br> <b> Reports and publications: </b>", publications,
#  "<br> <b> Website: </b>", website
}
shinyApp(ui, server)
source('~/.active-rstudio-document')
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
library(shiny); runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
runApp('C:/Users/David Buil Gil/Downloads/Map_US.R')
?gs_edit_cells
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
library(shiny); runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
library(shiny); runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
install.packages("rsconnect")
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
library(shiny); runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
install.packages("gsheet")
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
Project <- gsheet2tbl('docs.google.com/spreadsheets/d/1ouxGY2TT9utiyDHdGNw03bNm-7Y8QW5ebw-XK7BLLHw')
View(Project)
runApp('GitHub/Fear_of_crime_research_map/Code_map.R')
library(shiny); runApp('GitHub/Fear_of_crime_research_map/Code_map.R')

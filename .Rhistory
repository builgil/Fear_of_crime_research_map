leafletMap(
"map", "100%", 400,
initialTileLayer = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
initialTileLayerAttribution = HTML('Maps by <a href="http://www.mapbox.com/">Mapbox</a>'),
options=list(
center = c(37.45, -93.85),
zoom = 1.5,
maxBounds = list(list(17, -180), list(59, 180))))),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(lat = latitude,
lng = longitude,
radius = radius,
layerId=ids)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
shinyApp(
ui = fluidPage(
fluidRow(
leafletMap(
"map", "100%", 400,
initialTileLayer = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
initialTileLayerAttribution = HTML('Maps by <a href="http://www.mapbox.com/">Mapbox</a>'),
options=list(
center = c(37.45, -93.85),
zoom = 2,
maxBounds = list(list(17, -180), list(59, 180))))),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(lat = latitude,
lng = longitude,
radius = radius,
layerId=ids)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(list=ls(all=TRUE))
library(shiny)
library(leaflet)
library(RColorBrewer)
library(ggmap)
library(googlesheets)
Data <- gs_title("New_methods")
Project <- gs_read(ss = Data, ws = "Sheet_1", skip = 0)
colnames(Project)[2]  <- "title"
colnames(Project)[3]  <- "pi_name"
colnames(Project)[4]  <- "pi_institute"
colnames(Project)[5]  <- "pi_city"
colnames(Project)[6]  <- "coi_names"
colnames(Project)[7]  <- "coi_institutes"
colnames(Project)[8]  <- "level"
colnames(Project)[9]  <- "intro"
colnames(Project)[10] <- "methods"
colnames(Project)[11] <- "publications"
colnames(Project)[12] <- "website"
Project$coords <- geocode(as.character(Project$pi_city), source = "dsk")
Project$lat  <- as.numeric(Project$coords$lat)
Project$long <- as.numeric(Project$coords$lon)
shinyApp(
ui = fluidPage(
fluidRow(
leafletMap(
"map", "100%", 400,
initialTileLayer = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
initialTileLayerAttribution = HTML('Maps by <a href="http://www.mapbox.com/">Mapbox</a>'),
options=list(
center = c(37.45, -93.85),
zoom = 2,
maxBounds = list(list(17, -180), list(59, 180))))),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(clusterOptions = markerClusterOptions(),
color = ~pal(level),
fillOpacity = 0.9,
popup = ~paste0("<b>Project title: </b> ", title,
"<br> <b>PI name: </b>", pi_name,
"<br> <b>PI institution </b>", pi_institute,
"<br> <b>Other researchers: </b>", coi_names,
"<br> <b>Research level: </b>", level),
radius = 10)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
View(Project)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(list=ls(all=TRUE))
library(shiny)
library(leaflet)
latitude <- c(35.94077, 35.83770, 35.84545, 35.81584, 35.79387, 36.05600)
longitude <- c(-78.58010, -78.78084, -78.72444, -78.62568, -78.64262, -78.67600)
radius<-c(15, 12, 12, 12, 12, 15)
ids<-c("a", "b", "c", "d", "e", "f")
shinyApp(
ui = fluidPage(
fluidRow(
leafletMap(
"map", "100%", 400,
initialTileLayer = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
initialTileLayerAttribution = HTML('Maps by <a href="http://www.mapbox.com/">Mapbox</a>'),
options=list(
center = c(37.45, -93.85),
zoom = 2,
maxBounds = list(list(17, -180), list(59, 180))))),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(lat = latitude,
lng = longitude,
radius = radius,
layerId=ids)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
runApp('Code_map.R')
runApp('Code_map.R')
runApp('Code_map.R')
runApp('Code_map.R')
runApp('Code_map.R')
runApp('Code_map.R')
runApp('Code_map.R')
runApp('Code_map.R')
source('~/.active-rstudio-document')
rm(list=ls(all=TRUE))
library(shiny)
library(leaflet)
library(RColorBrewer)
library(ggmap)
library(googlesheets)
Data <- gs_title("New_methods")
Project <- gs_read(ss = Data, ws = "Sheet_1", skip = 0)
colnames(Project)[2]  <- "title"
colnames(Project)[3]  <- "pi_name"
colnames(Project)[4]  <- "pi_institute"
colnames(Project)[5]  <- "pi_city"
colnames(Project)[6]  <- "coi_names"
colnames(Project)[7]  <- "coi_institutes"
colnames(Project)[8]  <- "level"
colnames(Project)[9]  <- "intro"
colnames(Project)[10] <- "methods"
colnames(Project)[11] <- "publications"
colnames(Project)[12] <- "website"
Project$coords <- geocode(as.character(Project$pi_city), source = "dsk")
Project$lat  <- as.numeric(Project$coords$lat)
Project$long <- as.numeric(Project$coords$lon)
shinyApp(
ui = fluidPage(
fluidRow(
leafletMap(
"map", "100%", 400,
initialTileLayer = providers$Esri.WorldGrayCanvas,
initialTileLayerAttribution = HTML('Maps by <a href="http://www.mapbox.com/">Mapbox</a>'),
options=list(
center = c(37.45, -93.85),
zoom = 2,
maxBounds = list(list(17, -180), list(59, 180))))),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(lat = latitude,
lng = longitude,
radius = radius,
layerId=ids)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
shinyApp(
ui = fluidPage(
fluidRow(
leafletMap(
"map", "100%", 400,
initialTileLayer = providers$Esri.WorldGrayCanvas,
initialTileLayerAttribution = HTML('Maps by <a href="http://www.mapbox.com/">Mapbox</a>'),
options=list(
center = c(37.45, -93.85),
zoom = 2,
maxBounds = list(list(17, -180), list(59, 180))))),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(lat = Project$lat,
lng = Project$long,
radius = 10,
layerId = ids)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
Project$ids  <- seq.int(nrow(data))
Project$ids  <- seq.int(nrow(Projects))
Project$ids  <- seq.int(nrow(Project))
View(Project)
shinyApp(
ui = fluidPage(
fluidRow(
leafletMap(
"map", "100%", 400,
initialTileLayer = providers$Esri.WorldGrayCanvas,
initialTileLayerAttribution = HTML('Maps by <a href="http://www.mapbox.com/">Mapbox</a>'),
options=list(
center = c(37.45, -93.85),
zoom = 2,
maxBounds = list(list(17, -180), list(59, 180))))),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(lat = Project$lat,
lng = Project$long,
radius = 10,
layerId = ids)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
shinyApp(
ui = fluidPage(
fluidRow(
leafletMap(
"map", "100%", 400,
initialTileLayer = providers$Esri.WorldGrayCanvas,
initialTileLayerAttribution = HTML('Maps by <a href="http://www.mapbox.com/">Mapbox</a>'),
options=list(
center = c(37.45, -93.85),
zoom = 2,
maxBounds = list(list(17, -180), list(59, 180))))),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(lat = Project$lat,
lng = Project$long,
radius = 10,
layerId = Project$ids)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
shinyApp(
ui = fluidPage(
fluidRow(
leafletMap(
"map", "100%", 400,
initialTileLayer = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
initialTileLayerAttribution = HTML('Maps by <a href="http://www.mapbox.com/">Mapbox</a>'),
options=list(
center = c(37.45, -93.85),
zoom = 2,
maxBounds = list(list(17, -180), list(59, 180))))),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(lat = Project$lat,
lng = Project$long,
radius = 10,
layerId = Project$ids)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
shinyApp(
ui = fluidPage(
fluidRow(
leafletMap(
"map", "100%", 400,
addProviderTiles(providers$Esri.WorldGrayCanvas),
#initialTileLayer = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
#initialTileLayerAttribution = HTML('Maps by <a href="http://www.mapbox.com/">Mapbox</a>'),
options=list(
center = c(37.45, -93.85),
zoom = 2,
maxBounds = list(list(17, -180), list(59, 180))))),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(lat = Project$lat,
lng = Project$long,
radius = 10,
layerId = Project$ids)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
shinyApp(
ui = fluidPage(
fluidRow(
leaflet(Project) %>%
setView(lng = -0.1278328, lat = 51.50726, zoom = 2) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addCircleMarkers(clusterOptions = markerClusterOptions(),
color = ~pal(level),
fillOpacity = 0.9,
popup = ~paste0("<b>Project title: </b> ", title,
"<br> <b>PI name: </b>", pi_name,
"<br> <b>PI institution </b>", pi_institute,
"<br> <b>Other researchers: </b>", coi_names,
"<br> <b>Research level: </b>", level),
radius = 10)
),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(lat = Project$lat,
lng = Project$long,
radius = 10,
layerId = Project$ids)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
library(shiny)
library(leaflet)
library(RColorBrewer)
library(ggmap)
library(googlesheets)
Data <- gs_title("New_methods")
Project <- gs_read(ss = Data, ws = "Sheet_1", skip = 0)
colnames(Project)[2]  <- "title"
colnames(Project)[3]  <- "pi_name"
colnames(Project)[4]  <- "pi_institute"
colnames(Project)[5]  <- "pi_city"
colnames(Project)[6]  <- "coi_names"
colnames(Project)[7]  <- "coi_institutes"
colnames(Project)[8]  <- "level"
colnames(Project)[9]  <- "intro"
colnames(Project)[10] <- "methods"
colnames(Project)[11] <- "publications"
colnames(Project)[12] <- "website"
Project$coords <- geocode(as.character(Project$pi_city), source = "dsk")
Project$lat  <- as.numeric(Project$coords$lat)
Project$long <- as.numeric(Project$coords$lon)
Project$ids  <- seq.int(nrow(Project))
shinyApp(
ui = fluidPage(
fluidRow(
leaflet(Project) %>%
setView(lng = -0.1278328, lat = 51.50726, zoom = 2) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addCircleMarkers(clusterOptions = markerClusterOptions(),
color = ~pal(level),
fillOpacity = 0.9,
popup = ~paste0("<b>Project title: </b> ", title,
"<br> <b>PI name: </b>", pi_name,
"<br> <b>PI institution </b>", pi_institute,
"<br> <b>Other researchers: </b>", coi_names,
"<br> <b>Research level: </b>", level),
radius = 10)
),
fluidRow(verbatimTextOutput("Click_text"))),
server = function(input, output, session){
map = createLeafletMap(session, 'map')
session$onFlushed(once=T, function(){
map$addCircleMarker(lat = Project$lat,
lng = Project$long,
radius = 10,
layerId = Project$ids)
})
observe({
click<-input$map_marker_click
if(is.null(click))
return()
text<-paste("Lattitude ", click$lat, "Longtitude ", click$lng)
text2<-paste("You've selected point ", click$id)
map$clearPopups()
map$showPopup( click$lat, click$lng, text)
output$Click_text<-renderText({
text2
})
})
}
)
